{"ast":null,"code":"var _jsxFileName = \"/Users/juliom/React/ultimate-tic-tac-toe/src/app/Buttons.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-responsive-modal';\nimport './styles.css';\nimport PropTypes from 'prop-types';\n\nclass Buttons extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openModal: false,\n      openEndGameModal: false,\n      openInstructionsModal: false\n    };\n    this.nextSquare = -1;\n\n    this.clearGame = () => {\n      this.setState({\n        history: [{\n          squares: Array(81).fill(null)\n        }],\n        localWinners: Array(9).fill(null),\n        stepNumber: 0\n      });\n    };\n\n    this.onOpenModal = () => {\n      this.setState({\n        openModal: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        openModal: false\n      });\n      this.clearGame();\n      this.tie = false;\n    };\n\n    this.flipInstructions = () => {\n      this.setState({\n        openInstructionsModal: !this.state.openInstructionsModal\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        openEndGameModal: !this.state.openEndGameModal\n      });\n    };\n  }\n\n  render() {\n    const openEndGameModal = this.state.openEndGameModal;\n    const openInstructionsModal = this.state.openInstructionsModal;\n    return React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.englishFlag ? React.createElement(Modal, {\n      open: openEndGameModal,\n      onClose: this.endGame,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"End the Game?\"), React.createElement(\"button\", {\n      className: \"end-game-button\",\n      onClick: () => this.props.returnToHomeScreen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Yes\"), React.createElement(\"button\", {\n      right: true,\n      onClick: () => this.endGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"No\")) : React.createElement(Modal, {\n      open: openEndGameModal,\n      onClose: this.endGame,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Terminar el Juego?\"), React.createElement(\"button\", {\n      className: \"end-game-button\",\n      onClick: () => this.props.returnToHomeScreen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Si\"), React.createElement(\"button\", {\n      right: true,\n      onClick: () => this.endGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"No\")), this.props.englishFlag ? React.createElement(Modal, {\n      open: openInstructionsModal,\n      onClose: this.flipInstructions,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Win 3 games of tic tac toe in a row. You are sent to the game corresponding to your opponent's last move. If that game has been decided, you can pick any game to play.\"), React.createElement(\"button\", {\n      onClick: () => this.flipInstructions(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Play\")) : React.createElement(Modal, {\n      open: openInstructionsModal,\n      onClose: this.flipInstructions,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Gana 3 juegos de tic tac toe en una fila. Te env\\xEDan al juego correspondiente al \\xFAltimo movimiento de tu oponente. Si ese juego se ha decidido, puedes elegir cualquier juego para jugar.\"), React.createElement(\"button\", {\n      onClick: () => this.flipInstructions(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Jugar\")), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"end-game-button\",\n      onClick: () => this.endGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.englishFlag ? \"End Game?\" : \"Terminar el Juego?\"), React.createElement(\"button\", {\n      className: \"instructions-button\",\n      onClick: () => this.flipInstructions(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.englishFlag ? \"How to Play?\" : \"Como jugar?\")));\n  }\n\n}\n\nButtons.propTypes = {\n  returnToHomeScreen: PropTypes.func,\n  englishFlag: false\n};\nexport default Buttons;","map":{"version":3,"sources":["/Users/juliom/React/ultimate-tic-tac-toe/src/app/Buttons.js"],"names":["React","Component","Modal","PropTypes","Buttons","state","openModal","openEndGameModal","openInstructionsModal","nextSquare","clearGame","setState","history","squares","Array","fill","localWinners","stepNumber","onOpenModal","onCloseModal","tie","flipInstructions","endGame","render","props","englishFlag","returnToHomeScreen","propTypes","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Modal from 'react-responsive-modal'\nimport './styles.css'\nimport PropTypes from 'prop-types'\n\nclass Buttons extends Component {\n    state = {\n        openModal: false,\n        openEndGameModal: false,\n        openInstructionsModal: false\n    }\n\t\t\n    nextSquare = -1\n\n    clearGame = () => {\n        this.setState({\n            history: [{\n                    squares: Array(81).fill(null)\n            }],\n            localWinners: Array(9).fill(null),\n            stepNumber: 0\n        })\n    }\n\n    onOpenModal = () => {\n        this.setState({ openModal: true })\n    }\n\n    onCloseModal = () => {\n        this.setState({ openModal: false})\n        this.clearGame()\n        this.tie = false\n    }\n\n    flipInstructions = () => {\n        this.setState({ openInstructionsModal: !this.state.openInstructionsModal})\n    }\n\n    endGame = () => {\n        this.setState({ openEndGameModal: !this.state.openEndGameModal })\n    }\n\n    render() {\n        const openEndGameModal = this.state.openEndGameModal\n        const openInstructionsModal = this.state.openInstructionsModal\n\n    \treturn (\n    \t\t<div className=\"buttons\">\n                {\n                    this.props.englishFlag ?\n                        (<Modal open={openEndGameModal} onClose={this.endGame} center>\n                            <h2>End the Game?</h2>\n                            <button className=\"end-game-button\" onClick={() => this.props.returnToHomeScreen()}>Yes</button>\n                            <button right onClick={() => this.endGame()}>No</button>\n                        </Modal>)\n                            :\n                        (<Modal open={openEndGameModal} onClose={this.endGame} center>\n                            <h2>Terminar el Juego?</h2>\n                            <button className=\"end-game-button\" onClick={() => this.props.returnToHomeScreen()}>Si</button>\n                            <button right onClick={() => this.endGame()}>No</button>\n                        </Modal>)\n                }\n                {\n                    this.props.englishFlag ?\n                        (<Modal open={openInstructionsModal} onClose={this.flipInstructions} center>\n                            <h2>Win 3 games of tic tac toe in a row. You are sent to the game corresponding to your opponent's last move. If that game has been decided, you can pick any game to play.</h2>\n                            <button onClick={() => this.flipInstructions()}>Play</button>\n                        </Modal>)\n                            :\n                        (<Modal open={openInstructionsModal} onClose={this.flipInstructions} center>\n                            <h2>Gana 3 juegos de tic tac toe en una fila. Te envían al juego correspondiente al último movimiento de tu oponente. Si ese juego se ha decidido, puedes elegir cualquier juego para jugar.</h2>\n                            <button onClick={() => this.flipInstructions()}>Jugar</button>\n                        </Modal>)\n                }\n\n                <div className=\"buttons\">\n                    <button\n                        className=\"end-game-button\"\n                        onClick={() => this.endGame()}\n                    >\n                        {this.props.englishFlag ? \"End Game?\" : \"Terminar el Juego?\"}\n                    </button>\n                    <button\n                        className=\"instructions-button\"\n                        onClick={() => this.flipInstructions()}\n                    >\n                        {this.props.englishFlag ? \"How to Play?\" : \"Como jugar?\"}\n                    </button>\n                </div>\n            </div>\n    \t)\n    }\n}\n\nButtons.propTypes = {\n\treturnToHomeScreen: PropTypes.func,\n\tenglishFlag: false\n}\n\nexport default Buttons\n"]},"metadata":{},"sourceType":"module"}