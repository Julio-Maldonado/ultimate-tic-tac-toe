{"ast":null,"code":"var _jsxFileName = \"/Users/juliom/React/ultimate-tic-tac-toe/src/app/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\nimport Buttons from './Buttons';\nimport Modal from 'react-responsive-modal';\nimport { calculateWinner } from './helperFunctions';\nimport './styles.css';\nimport PropTypes from 'prop-types';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      history: [{\n        squares: Array(81).fill(null)\n      }],\n      localWinners: Array(9).fill(null),\n      stepNumber: 0,\n      xIsNext: true,\n      openModal: false,\n      openEndGameModal: false,\n      openInstructionsModal: false\n    };\n    this.nextSquare = -1;\n    this.squaresHistory = [-1];\n\n    this.handleClick = i => {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[this.state.stepNumber];\n      const squares = current.squares.slice();\n      const localWinners = this.state.localWinners.slice();\n      let currentSquareIndex = Math.floor(i / 9);\n      let currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9);\n      if (this.nextSquare !== currentSquareIndex && this.nextSquare !== -1) return;\n      if (localWinners[currentSquareIndex] || squares[i]) return;\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9); // Get the current square by its index using division\n      // let currentSquareIndex = Math.floor(i / 9)\n      // let currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n      // if there is now a winner at currentSquare then mark it off in localWinners\n\n      if (calculateWinner(currentSquare)) {\n        localWinners[currentSquareIndex] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          localWinners: localWinners\n        });\n      } else {\n        let noSolution = false;\n\n        for (let i = 0; i < 9; i++) {\n          if (currentSquare[i] === null) {\n            noSolution = true;\n            break;\n          }\n        }\n\n        if (!noSolution) {\n          localWinners[currentSquareIndex] = 'NO_SOLUTION';\n          this.setState({\n            localWinners: localWinners\n          });\n        }\n      }\n\n      let nextSquare = i % 9; // next square has a winner, so they can select any other square\n\n      if (localWinners[nextSquare] === null) this.nextSquare = nextSquare; // they have to go to that square\n      else this.nextSquare = -1;\n      this.squaresHistory.push(this.nextSquare);\n      this.undoUsed = false;\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        stepNumber: this.state.stepNumber + 1,\n        xIsNext: !this.state.xIsNext\n      });\n    };\n\n    this.clearGame = () => {\n      this.setState({\n        history: [{\n          squares: Array(81).fill(null)\n        }],\n        localWinners: Array(9).fill(null),\n        stepNumber: 0\n      });\n    };\n\n    this.onOpenModal = () => {\n      this.setState({\n        openModal: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        openModal: false\n      });\n      this.clearGame();\n      this.tie = false;\n    };\n\n    this.flipInstructions = () => {\n      this.setState({\n        openInstructionsModal: !this.state.openInstructionsModal\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        openEndGameModal: !this.state.openEndGameModal\n      });\n    };\n\n    this.undo = () => {\n      if (this.undoUsed === false) {\n        this.nextSquare = this.squaresHistory[this.state.stepNumber - 1];\n        this.setState({\n          stepNumber: this.state.stepNumber - 1,\n          xIsNext: !this.state.xIsNext\n        });\n        this.undoUsed = true;\n      }\n    };\n  }\n\n  render() {\n    const openModal = this.state.openModal;\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const localWinners = this.state.localWinners.slice();\n    const winner = calculateWinner(localWinners);\n    console.log(\"history = \", history);\n    console.log(\"current = \", current);\n    let status;\n\n    if (winner && !openModal) {\n      if (this.props.englishFlag) status = 'Winner: ' + winner;else status = 'Ganador: ' + winner;\n      this.onOpenModal();\n    } else {\n      if (this.props.englishFlag) status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');else status = 'Siguiente jugador: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    if (history.length === 82 && !openModal) {\n      this.tie = true;\n      this.onOpenModal();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.props.englishFlag ? React.createElement(Modal, {\n      open: openModal,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.tie ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"It's a tie!\") : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Congrats Player \", winner, \"!\"), React.createElement(\"button\", {\n      className: \"left-button\",\n      onClick: () => this.onCloseModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Play Again\"), React.createElement(\"button\", {\n      className: \"right-button\",\n      onClick: () => this.props.returnToHomeScreen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Go Back\")) : React.createElement(Modal, {\n      open: openModal,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.tie ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Es una empate!\") : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Felicidades Jugador \", winner, \"!\"), React.createElement(\"button\", {\n      className: \"left-button\",\n      onClick: () => this.onCloseModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Juega de Nuevo\"), React.createElement(\"button\", {\n      className: \"right-button\",\n      onClick: () => this.props.returnToHomeScreen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Regresa\")), React.createElement(Buttons, {\n      englishFlag: this.props.englishFlag,\n      returnToHomeScreen: this.props.returnToHomeScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Board, {\n      nextSquare: this.nextSquare,\n      squares: current.squares,\n      localWinners: localWinners,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"undo-button\",\n      onClick: () => this.undo(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.undoUsed === false ? \"Undo\" : \"Make move to undo\"), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, status)));\n  }\n\n}\n\nGame.propTypes = {\n  returnToHomeScreen: PropTypes.func,\n  englishFlag: false\n};\nexport default Game;","map":{"version":3,"sources":["/Users/juliom/React/ultimate-tic-tac-toe/src/app/Game.js"],"names":["React","Component","Board","Buttons","Modal","calculateWinner","PropTypes","Game","state","history","squares","Array","fill","localWinners","stepNumber","xIsNext","openModal","openEndGameModal","openInstructionsModal","nextSquare","squaresHistory","handleClick","i","slice","current","currentSquareIndex","Math","floor","currentSquare","setState","noSolution","push","undoUsed","concat","clearGame","onOpenModal","onCloseModal","tie","flipInstructions","endGame","undo","render","winner","console","log","status","props","englishFlag","length","returnToHomeScreen","propTypes","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Board from './Board'\nimport Buttons from './Buttons'\nimport Modal from 'react-responsive-modal'\nimport {calculateWinner} from './helperFunctions'\nimport './styles.css'\nimport PropTypes from 'prop-types'\n\nclass Game extends Component {\n    state = {\n    \thistory: [{\n    \t\tsquares: Array(81).fill(null),\n\t\t\t}],\n\t\t\tlocalWinners: Array(9).fill(null),\n    \tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\topenModal: false,\n\t\t\topenEndGameModal: false,\n\t\t\topenInstructionsModal: false\n\t\t}\n\t\t\n\t\tnextSquare = -1\n\t\tsquaresHistory = [-1]\n\n    handleClick = (i) => {\n    \tconst history = this.state.history.slice(0, this.state.stepNumber + 1)\n    \tconst current = history[this.state.stepNumber]\n\t\t\tconst squares = current.squares.slice()\n\n\t\t\tconst localWinners = this.state.localWinners.slice()\n\t\t\tlet currentSquareIndex = Math.floor(i / 9)\n\t\t\tlet currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n\n\t\t\tif (this.nextSquare !== currentSquareIndex && this.nextSquare !== -1)\n\t\t\t\treturn\n\t\t\t\t\n    \tif (localWinners[currentSquareIndex] || squares[i])\n\t\t\t\treturn\n\n\t\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O'\n\t\t\tcurrentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n\t\t\t// Get the current square by its index using division\n\t\t\t// let currentSquareIndex = Math.floor(i / 9)\n\t\t\t// let currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n\t\t\t// if there is now a winner at currentSquare then mark it off in localWinners\n\t\t\tif (calculateWinner(currentSquare)) {\n\t\t\t\tlocalWinners[currentSquareIndex] = this.state.xIsNext ? 'X' : 'O'\n\t\t\t\tthis.setState({\n\t\t\t\t\tlocalWinners: localWinners\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tlet noSolution = false\n\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\tif (currentSquare[i] === null) {\n\t\t\t\t\t\tnoSolution = true\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!noSolution) {\n\t\t\t\t\tlocalWinners[currentSquareIndex] = 'NO_SOLUTION'\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tlocalWinners: localWinners\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet nextSquare = i % 9\n\t\t\t// next square has a winner, so they can select any other square\n\t\t\tif (localWinners[nextSquare] === null)\n\t\t\t\tthis.nextSquare = nextSquare\n\t\t\t// they have to go to that square\n\t\t\telse\n\t\t\t\tthis.nextSquare = -1\n\t\t\tthis.squaresHistory.push(this.nextSquare)\n\n\t\t\tthis.undoUsed = false\n    \tthis.setState({\n    \t\thistory: history.concat([{\n    \t\t\tsquares: squares\n    \t\t}]),\n    \t\tstepNumber: this.state.stepNumber + 1,\n    \t\txIsNext: !this.state.xIsNext\n    \t})\n\t\t}\n\n\t\tclearGame = () => {\n\t\t\tthis.setState({\n\t\t\t\thistory: [{\n\t\t\t\t\t\tsquares: Array(81).fill(null)\n\t\t\t\t}],\n\t\t\t\tlocalWinners: Array(9).fill(null),\n\t\t\t\tstepNumber: 0\n\t\t\t})\n\t\t}\n\n\t\tonOpenModal = () => {\n\t\t\tthis.setState({ openModal: true })\n\t\t}\n\n\t\tonCloseModal = () => {\n\t\t\tthis.setState({ openModal: false})\n\t\t\tthis.clearGame()\n\t\t\tthis.tie = false\n\t\t}\n\n\t\tflipInstructions = () => {\n\t\t\tthis.setState({ openInstructionsModal: !this.state.openInstructionsModal})\n\t\t}\n\n\t\tendGame = () => {\n\t\t\tthis.setState({ openEndGameModal: !this.state.openEndGameModal })\n\t\t}\n\n\t\tundo = () => {\n\t\t\tif (this.undoUsed === false) {\n\t\t\t\tthis.nextSquare = this.squaresHistory[this.state.stepNumber-1]\n\t\t\t\tthis.setState({\n\t\t\t\t\tstepNumber: this.state.stepNumber - 1,\n\t\t\t\t\txIsNext: !this.state.xIsNext,\n\t\t\t\t})\n\t\t\t\tthis.undoUsed = true\n\t\t\t}\n\t\t}\n\n    render() {\n\t\t\tconst openModal = this.state.openModal\n\n    \tconst history = this.state.history\n\t\t\tconst current = history[this.state.stepNumber]\n\t\t\tconst localWinners = this.state.localWinners.slice()\n\t\t\tconst winner = calculateWinner(localWinners)\n\n\t\t\tconsole.log(\"history = \", history)\n\t\t\tconsole.log(\"current = \", current)\n\n    \tlet status\n\t\t\tif (winner && !openModal) {\n\t\t\t\tif (this.props.englishFlag)\n\t\t\t\t\tstatus = 'Winner: ' + winner\n\t\t\t\telse\n\t\t\t\t\tstatus = 'Ganador: ' + winner\n\t\t\t\tthis.onOpenModal()\n\t\t\t} else {\n\t\t\t\t\tif (this.props.englishFlag)\n\t\t\t\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n\t\t\t\t\telse \n\t\t\t\t\t\tstatus = 'Siguiente jugador: ' + (this.state.xIsNext ? 'X' : 'O')\n\t\t\t}\n\n\t\t\tif (history.length === 82 && !openModal) {\n\t\t\t\tthis.tie = true\n\t\t\t\tthis.onOpenModal()\n\t\t\t}\n\n    \treturn (\n    \t\t<div className=\"game\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.englishFlag ?\n\t\t\t\t\t\t\t(<Modal open={openModal} onClose={this.onCloseModal} center>\n\t\t\t\t\t\t\t\t{this.tie ? <h2>It's a tie!</h2> : <h2>Congrats Player {winner}!</h2>}\n\t\t\t\t\t\t\t\t<button className=\"left-button\" onClick={() => this.onCloseModal()}>Play Again</button>\n\t\t\t\t\t\t\t\t<button className=\"right-button\" onClick={() => this.props.returnToHomeScreen()}>Go Back</button>\n\t\t\t\t\t\t\t</Modal>)\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t(<Modal open={openModal} onClose={this.onCloseModal} center>\n\t\t\t\t\t\t\t\t{this.tie ? <h2>Es una empate!</h2> : <h2>Felicidades Jugador {winner}!</h2>}\n\t\t\t\t\t\t\t\t<button className=\"left-button\" onClick={() => this.onCloseModal()}>Juega de Nuevo</button>\n\t\t\t\t\t\t\t\t<button className=\"right-button\" onClick={() => this.props.returnToHomeScreen()}>Regresa</button>\n\t\t\t\t\t\t\t</Modal>)\n\t\t\t\t\t}\n\t\t\t\t\t<Buttons englishFlag={this.props.englishFlag} returnToHomeScreen={this.props.returnToHomeScreen}/>\n    \t\t\t<div className=\"game-board\">\n    \t\t\t\t<Board\n\t\t\t\t\t\t\tnextSquare={this.nextSquare}\n\t\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\t\tlocalWinners={localWinners}\n    \t\t\t\t\tonClick={(i) => this.handleClick(i)}\n    \t\t\t\t/>\n    \t\t\t</div>\n\t\t\t\t\t<button className=\"undo-button\" onClick={() => this.undo()}>\n\t\t\t\t\t\t{this.undoUsed === false ? \"Undo\" : \"Make move to undo\"}\n\t\t\t\t\t</button>\n    \t\t\t<div className=\"game-info\">\n    \t\t\t\t<div>{status}</div>\n    \t\t\t</div>\n    \t\t</div>\n    \t)\n    }\n}\n\nGame.propTypes = {\n\treturnToHomeScreen: PropTypes.func,\n\tenglishFlag: false\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}