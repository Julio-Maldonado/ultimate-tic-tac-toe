{"ast":null,"code":"var _jsxFileName = \"/Users/juliom/React/ultimate-tic-tac-toe/src/app/Game.js\";\nimport React, { Component } from 'react';\nimport { calculateWinner } from './helperFunctions';\nimport Board from './Board';\nimport './styles.css';\nimport Modal from 'react-responsive-modal';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      history: [{\n        squares: Array(81).fill(null)\n      }],\n      localWinners: Array(9).fill(null),\n      stepNumber: 0,\n      xIsNext: true,\n      openModal: false\n    };\n\n    this.jumpTo = step => {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    };\n\n    this.handleClick = i => {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const localWinners = this.state.localWinners.slice();\n      let currentSquareIndex = Math.floor(i / 9);\n      let currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9); // console.log(localWinners)\n\n      if (localWinners[currentSquareIndex] || squares[i]) return;\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9); // Get the current square by its index using division\n      // let currentSquareIndex = Math.floor(i / 9)\n      // let currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n      // if there is now a winner at currentSquare then mark it off in localWinners\n\n      if (calculateWinner(currentSquare)) {\n        localWinners[currentSquareIndex] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          localWinners: localWinners\n        });\n      }\n\n      let nextSquare = i % 9;\n      console.log('localWinners=' + localWinners);\n      console.log('nextSquare=' + nextSquare);\n\n      if (localWinners[nextSquare] === true) {\n        console.log('nextSquare = ' + nextSquare);\n        this.nextSquare = nextSquare; // next square has a winner, so they can select any other square\n      } else {\n        console.log('nextSquare not available = ' + nextSquare); // they have to go to that square\n      } // squares[i] = this.state.xIsNext ? 'X' : 'O'\n\n\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext\n      });\n    };\n\n    this.clearGame = () => {\n      this.setState({\n        history: [{\n          squares: Array(81).fill(null)\n        }],\n        stepNumber: 0\n      });\n    };\n\n    this.onOpenModal = () => {\n      this.setState({\n        openModal: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        openModal: false\n      });\n      this.clearGame();\n      this.tie = false;\n    };\n  }\n\n  render() {\n    const openModal = this.state.openModal;\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const localWinners = this.state.localWinners.slice();\n    const winner = calculateWinner(localWinners);\n    const moves = history.map((step, move) => {\n      let desc;\n      if (this.props.englishFlag) desc = move ? 'Go to move #' + move : 'Go to game start';else desc = move ? 'Ir a moverse #' + move : 'Ir al inicio del juego';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner && !openModal) {\n      if (this.props.englishFlag) status = 'Winner: ' + winner;else status = 'Ganador: ' + winner;\n      this.onOpenModal();\n    } else {\n      if (this.props.englishFlag) status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');else status = 'Siguiente jugador: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    if (history.length === 82 && !openModal) {\n      this.tie = true;\n      this.onOpenModal();\n    } // console.log(localWinners)\n\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.props.englishFlag ? React.createElement(Modal, {\n      open: openModal,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.tie ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"It's a tie!\") : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Congrats Player \", winner, \"!\"), React.createElement(\"button\", {\n      onClick: () => this.onCloseModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Play Again\"), React.createElement(\"button\", {\n      onClick: () => this.props.returnToHomeScreen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Go Back\")) : React.createElement(Modal, {\n      open: openModal,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.tie ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Es una empate!\") : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Felicidades Jugador \", winner, \"!\"), React.createElement(\"button\", {\n      onClick: () => this.onCloseModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Juega de Nuevo\"), React.createElement(\"button\", {\n      onClick: () => this.props.returnToHomeScreen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Regresa\")), React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      localWinners: localWinners,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/juliom/React/ultimate-tic-tac-toe/src/app/Game.js"],"names":["React","Component","calculateWinner","Board","Modal","Game","state","history","squares","Array","fill","localWinners","stepNumber","xIsNext","openModal","jumpTo","step","setState","handleClick","i","slice","current","length","currentSquareIndex","Math","floor","currentSquare","nextSquare","console","log","concat","clearGame","onOpenModal","onCloseModal","tie","render","winner","moves","map","move","desc","props","englishFlag","status","returnToHomeScreen"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {calculateWinner} from './helperFunctions'\nimport Board from './Board'\nimport './styles.css'\nimport Modal from 'react-responsive-modal'\n\nclass Game extends Component {\n    state = {\n    \thistory: [{\n    \t\tsquares: Array(81).fill(null),\n\t\t\t}],\n\t\t\tlocalWinners: Array(9).fill(null),\n    \tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\topenModal: false,\n    }\n\n    jumpTo = (step) => {\n    \tthis.setState({\n    \t\tstepNumber: step,\n    \t\txIsNext: (step % 2) === 0\n    \t})\n\t\t}\n\n    handleClick = (i) => {\n    \tconst history = this.state.history.slice(0, this.state.stepNumber + 1)\n    \tconst current = history[history.length - 1]\n\t\t\tconst squares = current.squares.slice()\n\n\t\t\tconst localWinners = this.state.localWinners.slice()\n\t\t\tlet currentSquareIndex = Math.floor(i / 9)\n\t\t\tlet currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n\t\t\t// console.log(localWinners)\n    \tif (localWinners[currentSquareIndex] || squares[i])\n\t\t\t\treturn\n\n\t\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O'\n\t\t\tcurrentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n\t\t\t// Get the current square by its index using division\n\t\t\t// let currentSquareIndex = Math.floor(i / 9)\n\t\t\t// let currentSquare = squares.slice(currentSquareIndex * 9, currentSquareIndex * 9 + 9)\n\t\t\t// if there is now a winner at currentSquare then mark it off in localWinners\n\t\t\tif (calculateWinner(currentSquare)) {\n\t\t\t\tlocalWinners[currentSquareIndex] = this.state.xIsNext ? 'X' : 'O'\n\t\t\t\tthis.setState({\n\t\t\t\t\tlocalWinners: localWinners\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlet nextSquare = i % 9\n\t\t\tconsole.log('localWinners=' + localWinners)\n\t\t\tconsole.log('nextSquare=' + nextSquare)\n\t\t\tif (localWinners[nextSquare] === true) {\n\t\t\t\tconsole.log('nextSquare = ' + nextSquare)\n\t\t\t\tthis.nextSquare = nextSquare\n\t\t\t\t// next square has a winner, so they can select any other square\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('nextSquare not available = ' + nextSquare)\n\t\t\t\t// they have to go to that square\n\t\t\t}\n\n    \t// squares[i] = this.state.xIsNext ? 'X' : 'O'\n    \tthis.setState({\n    \t\thistory: history.concat([{\n    \t\t\tsquares: squares\n    \t\t}]),\n    \t\tstepNumber: history.length,\n    \t\txIsNext: !this.state.xIsNext\n    \t})\n\t\t}\n\n\t\tclearGame = () => {\n\t\t\tthis.setState({\n\t\t\t\thistory: [{\n\t\t\t\t\t\tsquares: Array(81).fill(null)\n\t\t\t\t}],\n\t\t\t\tstepNumber: 0\n\t\t\t})\n\t\t}\n\n\t\tonOpenModal = () => {\n\t\t\tthis.setState({ openModal: true });\n\t\t};\n\n\t\tonCloseModal = () => {\n\t\t\tthis.setState({ openModal: false});\n\t\t\tthis.clearGame()\n\t\t\tthis.tie = false\n\t\t};\n\n    render() {\n\t\t\tconst openModal = this.state.openModal\n\n    \tconst history = this.state.history\n\t\t\tconst current = history[this.state.stepNumber]\n\t\t\tconst localWinners = this.state.localWinners.slice()\n\t\t\tconst winner = calculateWinner(localWinners)\n\n    \tconst moves = history.map((step, move) => {\n\t\t\tlet desc\n\t\t\tif (this.props.englishFlag)\n\t\t\t\tdesc = move ? 'Go to move #' + move : 'Go to game start'\n\t\t\telse \n\t\t\t\tdesc = move ? 'Ir a moverse #' + move : 'Ir al inicio del juego'\n\n    \t\treturn (\n    \t\t\t<li key={move}>\n    \t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\n    \t\t\t</li>\n    \t\t)\n    \t})\n\n    \tlet status\n\t\t\tif (winner && !openModal) {\n\t\t\t\tif (this.props.englishFlag)\n\t\t\t\t\tstatus = 'Winner: ' + winner\n\t\t\t\telse \n\t\t\t\t\tstatus = 'Ganador: ' + winner\n\t\t\t\tthis.onOpenModal()\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\tif (this.props.englishFlag)\n\t\t\t\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n\t\t\t\t\telse \n\t\t\t\t\t\tstatus = 'Siguiente jugador: ' + (this.state.xIsNext ? 'X' : 'O')\n\t\t\t}\n\n\t\t\tif (history.length === 82 && !openModal) {\n\t\t\t\tthis.tie = true\n\t\t\t\tthis.onOpenModal()\n\t\t\t}\n\t\t\t// console.log(localWinners)\n    \treturn (\n    \t\t<div className=\"game\">\n\t\t\t\t{\n\t\t\t\t\tthis.props.englishFlag ?\n\t\t\t\t\t\t(<Modal open={openModal} onClose={this.onCloseModal} center>\n\t\t\t\t\t\t\t{this.tie ? <h2>It's a tie!</h2> : <h2>Congrats Player {winner}!</h2>}\t\t\t\t\t\n\t\t\t\t\t\t\t<button onClick={() => this.onCloseModal()}>Play Again</button>\n\t\t\t\t\t\t\t<button onClick={() => this.props.returnToHomeScreen()}>Go Back</button>\n\t\t\t\t\t\t</Modal>)\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t(<Modal open={openModal} onClose={this.onCloseModal} center>\n\t\t\t\t\t\t\t{this.tie ? <h2>Es una empate!</h2> : <h2>Felicidades Jugador {winner}!</h2>}\t\t\t\t\t\n\t\t\t\t\t\t\t<button onClick={() => this.onCloseModal()}>Juega de Nuevo</button>\n\t\t\t\t\t\t\t<button onClick={() => this.props.returnToHomeScreen()}>Regresa</button>\n\t\t\t\t\t\t</Modal>)\n\t\t\t\t}\n    \t\t\t<div className=\"game-board\">\n    \t\t\t\t<Board\n\t\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\t\tlocalWinners={localWinners}\n    \t\t\t\t\tonClick={(i) => this.handleClick(i)}\n    \t\t\t\t/>\n    \t\t\t</div>\n    \t\t\t<div className=\"game-info\">\n    \t\t\t\t<div>{status}</div>\n    \t\t\t\t<ol>{moves}</ol>\n    \t\t\t</div>\n    \t\t</div>\n    \t)\n    }\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}