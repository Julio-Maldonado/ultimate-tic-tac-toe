{"ast":null,"code":"import _slicedToArray from \"/Users/juliom/React/ultimate-tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\n\nlet calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) return squares[a];\n  }\n\n  return null;\n};\n\nlet getStyle = (num, value, belongsTo, green) => {\n  let style = {};\n  let x = num % 3;\n  if (x === 0) style.borderLeft = \"1vw solid black\";else if (x === 2) style.borderRight = \"1vw solid black\";\n  x = num % 9;\n  if (num >= 0 && num <= 2) style.borderTop = \"1vw solid black\";else if (num >= 6 && num <= 8) style.borderBottom = \"1vw solid black\";\n  if (value === 'X') style.color = \"red\";else if (value === 'O') style.color = \"lightblue\";\n  if (belongsTo === 'X') style.background = \"maroon\";else if (belongsTo === 'O') style.background = \"blue\";else {\n    if (green) style.background = \"lightgreen\";else style.background = \"white\";\n  }\n  return style;\n};\n\nexport { getStyle, calculateWinner };","map":{"version":3,"sources":["/Users/juliom/React/ultimate-tic-tac-toe/src/app/helperFunctions.js"],"names":["React","calculateWinner","squares","lines","i","length","a","b","c","getStyle","num","value","belongsTo","green","style","x","borderLeft","borderRight","borderTop","borderBottom","color","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAIC,eAAe,GAAIC,OAAD,IAAa;AAC/B,QAAMC,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAA,oCACjBD,KAAK,CAACC,CAAD,CADY;AAAA,UAC5BE,CAD4B;AAAA,UACzBC,CADyB;AAAA,UACtBC,CADsB;;AAEnC,QAAIN,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EACI,OAAON,OAAO,CAACI,CAAD,CAAd;AACP;;AACD,SAAO,IAAP;AACH,CAjBD;;AAmBA,IAAIG,QAAQ,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,SAAb,EAAwBC,KAAxB,KAAkC;AAC7C,MAAIC,KAAK,GAAG,EAAZ;AAEA,MAAIC,CAAC,GAAGL,GAAG,GAAG,CAAd;AACH,MAAIK,CAAC,KAAK,CAAV,EACCD,KAAK,CAACE,UAAN,GAAmB,iBAAnB,CADD,KAEK,IAAID,CAAC,KAAK,CAAV,EACJD,KAAK,CAACG,WAAN,GAAoB,iBAApB;AAEDF,EAAAA,CAAC,GAAGL,GAAG,GAAG,CAAV;AACA,MAAIA,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI,CAAvB,EACCI,KAAK,CAACI,SAAN,GAAkB,iBAAlB,CADD,KAEK,IAAIR,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI,CAAvB,EACJI,KAAK,CAACK,YAAN,GAAqB,iBAArB;AAED,MAAIR,KAAK,KAAK,GAAd,EACCG,KAAK,CAACM,KAAN,GAAc,KAAd,CADD,KAEK,IAAIT,KAAK,KAAK,GAAd,EACJG,KAAK,CAACM,KAAN,GAAc,WAAd;AAED,MAAIR,SAAS,KAAK,GAAlB,EACCE,KAAK,CAACO,UAAN,GAAmB,QAAnB,CADD,KAEK,IAAIT,SAAS,KAAK,GAAlB,EACJE,KAAK,CAACO,UAAN,GAAmB,MAAnB,CADI,KAEA;AACJ,QAAIR,KAAJ,EACCC,KAAK,CAACO,UAAN,GAAmB,YAAnB,CADD,KAGCP,KAAK,CAACO,UAAN,GAAmB,OAAnB;AACD;AAED,SAAOP,KAAP;AACA,CAhCD;;AAkCA,SAAQL,QAAR,EAAkBR,eAAlB","sourcesContent":["import React from 'react'\nlet calculateWinner = (squares) => {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ]\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n            return squares[a]\n    }\n    return null\n}\n\nlet getStyle = (num, value, belongsTo, green) => {\n    let style = {}\n\n    let x = num % 3\n\tif (x === 0)\n\t\tstyle.borderLeft = \"1vw solid black\"\n\telse if (x === 2)\n\t\tstyle.borderRight = \"1vw solid black\"\n\t\n\tx = num % 9\n\tif (num >= 0 && num <= 2)\n\t\tstyle.borderTop = \"1vw solid black\"\n\telse if (num >= 6 && num <= 8)\n\t\tstyle.borderBottom = \"1vw solid black\"\n\t\n\tif (value === 'X')\n\t\tstyle.color = \"red\"\n\telse if (value === 'O')\n\t\tstyle.color = \"lightblue\"\n\n\tif (belongsTo === 'X')\n\t\tstyle.background = \"maroon\"\n\telse if (belongsTo === 'O')\n\t\tstyle.background = \"blue\"\n\telse {\n\t\tif (green)\n\t\t\tstyle.background = \"lightgreen\"\n\t\telse\n\t\t\tstyle.background = \"white\"\n\t}\n\n\treturn style\n}\n\nexport {getStyle, calculateWinner}\n"]},"metadata":{},"sourceType":"module"}